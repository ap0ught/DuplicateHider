<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{4FDF1E89-5BC3-4C72-8FDA-0D580E7A5D5F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>DuplicateHider</RootNamespace>
    <AssemblyName>DuplicateHider</AssemblyName>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- Check if optional SDK dependencies exist -->
  <PropertyGroup>
    <QuickSearchSDKPath>..\..\QuickSearch\source\bin\Release\QuickSearchSDK.dll</QuickSearchSDKPath>
    <QuickSearchAttributesPath>..\..\QuickSearch\source\bin\Release\QuickSearchSDK.Attributes.dll</QuickSearchAttributesPath>
    <StartPageSDKPath>..\..\StartPage-for-Playnite\source\StartPage.SDK\bin\Release\StartPage.SDK.dll</StartPageSDKPath>
    <HasQuickSearchSDK Condition="Exists('$(QuickSearchSDKPath)') And Exists('$(QuickSearchAttributesPath)')">true</HasQuickSearchSDK>
    <HasStartPageSDK Condition="Exists('$(StartPageSDKPath)')">true</HasStartPageSDK>
  </PropertyGroup>
  <!-- Define conditional compilation symbols based on available SDKs -->
  <PropertyGroup Condition=" '$(HasQuickSearchSDK)' == 'true' ">
    <DefineConstants>$(DefineConstants);QUICKSEARCH</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(HasStartPageSDK)' == 'true' ">
    <DefineConstants>$(DefineConstants);STARTPAGE</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <!-- Optional SDK References (only included if available) -->
  <ItemGroup Condition=" '$(HasQuickSearchSDK)' == 'true' ">
    <Reference Include="QuickSearchSDK">
      <HintPath>$(QuickSearchSDKPath)</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="QuickSearchSDK.Attributes">
      <HintPath>$(QuickSearchAttributesPath)</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition=" '$(HasStartPageSDK)' == 'true' ">
    <Reference Include="StartPage.SDK">
      <HintPath>$(StartPageSDKPath)</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Cache.cs" />
    <Compile Include="Cache\IconCache.cs" />
    <Compile Include="Cache\IGeneratorCache.cs" />
    <Compile Include="Constants.cs" />
    <Compile Include="Controls\DHContentControl.xaml.cs">
      <DependentUpon>DHContentControl.xaml</DependentUpon>
    </Compile>
    <Compile Include="Controls\DHWrapper.xaml.cs">
      <DependentUpon>DHWrapper.xaml</DependentUpon>
    </Compile>
    <Compile Include="Controls\SourceSelector.xaml.cs">
      <DependentUpon>SourceSelector.xaml</DependentUpon>
    </Compile>
    <Compile Include="Converters\DatabaseIdToNameConverter.cs" />
    <Compile Include="Converters\EnumToStringConverter.cs" />
    <Compile Include="Converters\GamePropertyToNameConverter.cs" />
    <Compile Include="Converters\GameToPrioConverter.cs" />
    <Compile Include="Converters\PropertyIdToNameConverter.cs" />
    <Compile Include="DuplicateHiderPlugin.cs" />
    <Compile Include="DuplicateHiderSettings.cs" />
    <Compile Include="DuplicateHiderSettingsView.xaml.cs">
      <DependentUpon>DuplicateHiderSettingsView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Extensions.cs" />
    <Compile Include="Filters\GameFilters.cs" />
    <Compile Include="Filters\IFilter.cs" />
    <Compile Include="Data\CustomGroup.cs" />
    <Compile Include="Models\CopyFieldsModel.cs" />
    <Compile Include="Models\CustomGroupViewModel.cs" />
    <Compile Include="Models\EnabledFieldsModel.cs" />
    <Compile Include="Models\LibraryStatisticsModel.cs" />
    <Compile Include="Models\ListData.cs" />
    <Compile Include="Models\PriorityProperty.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Filters\StringFilters.cs" />
    <Compile Include="UiIntegration.cs" />
    <Compile Include="UniqueList.cs" />
    <Compile Include="Controls\CustomGroupList.xaml.cs">
      <DependentUpon>CustomGroupList.xaml</DependentUpon>
    </Compile>
    <Compile Include="ViewModels\AddTagViewModel.cs" />
    <Compile Include="ViewModels\CopyFieldsViewModel.cs" />
    <Compile Include="ViewModels\LibraryStatisticsViewModel.cs" />
    <Compile Include="ViewModels\PriorityPropertyViewModel.cs" />
    <Compile Include="Views\AddTagView.xaml.cs">
      <DependentUpon>AddTagView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Views\CopyFieldsView.xaml.cs">
      <DependentUpon>CopyFieldsView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Views\PriorityPropertyView.xaml.cs">
      <DependentUpon>PriorityPropertyView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Views\StartPage\LibraryStatisticsView.xaml.cs">
      <DependentUpon>LibraryStatisticsView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Windows\IconPreview.xaml.cs">
      <DependentUpon>IconPreview.xaml</DependentUpon>
    </Compile>
    <Compile Include="Windows\PreviewData.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include=".gitignore" />
    <None Include="extension.yaml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Page Include="Controls\DHContentControl.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Controls\DHWrapper.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Controls\SourceSelector.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="DuplicateHiderSettingsView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Content Include="Localization\*.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Page Include="Controls\CustomGroupList.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Views\AddTagView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Views\CopyFieldsView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Views\PriorityPropertyView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Views\StartPage\LibraryStatisticsView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Windows\IconPreview.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <None Include="icon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\amazon.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\battle.net.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\bethesda.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\epic.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\gog.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\humble.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\itchio.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\origin.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\steam.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\ubisoft connect.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\xbox.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\psn.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\twitch.ico" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="icons\playnite.ico" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="gong-wpf-dragdrop">
      <Version>2.4.1</Version>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json">
      <Version>13.0.1</Version>
    </PackageReference>
    <PackageReference Include="PlayniteSDK">
      <Version>6.13.0</Version>
    </PackageReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- Only run PostBuildEvent if Playnite Toolbox exists (local development) -->
  <PropertyGroup>
    <PostBuildEvent Condition="Exists('$(LOCALAPPDATA)\Playnite\Toolbox.exe')">$(LOCALAPPDATA)\Playnite\Toolbox.exe pack $(ProjectDir)$(OutDir) $(ProjectDir)bin</PostBuildEvent>
  </PropertyGroup>
</Project>